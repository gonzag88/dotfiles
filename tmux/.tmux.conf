# Set zsh as default Tmux shell
set-option -g default-shell /bin/zsh

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Reload tmux using r
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# use UTF
# set -g utf8
# set-window-option -g utf8 on

# Display things in 256 colors
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g pane-border-style 'fg=brightblack,bg=black'
set -g pane-active-border-style 'fg=brightwhite,bg=black'
set -g status-style 'fg=brightblack,bg=black'
set -g message-style 'fg=cyan, bg=black'
set -g clock-mode-colour cyan
#
#
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal "screen-256color"
# Control what happens with the tmux prompt
set-option -g status-keys "emacs"

# Limit history to 20_000
set-option -g history-limit 10000

# automatically renumber tmux windows
set-option -g renumber-windows on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set-option -sg escape-time 0

# make window/pane index start with 1
set-option -g base-index 1
setw -g pane-base-index 1

# synchronize all panes in a window
bind y setw synchronize-panes

# Allows to navigate through panes without pressing the control key
# with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use - and (| or \) to split window in the current pane
bind-key - split-window -v -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"
# Open new windows in the current pane directory
bind c new-window -c "#{pane_current_path}"

# remove administrative info (session name, hostname, time, etc) from status bar
set-option -g status-left-length 50
set-option -g status-left ""
set-option -g status-right ""
set-option -g status-bg '#666666' # Set background status bar color
set-option -g status-fg '#aaaaaa' # Set foreground status bar color

# Window numbering configuration
set-option -g base-index 1 # Start numbering at 1
set-option -g renumber-windows on # Renumber windows on the fly

# Move pane to new window
bind-key b break-pane -d

# enable mouse support for switching panes/windows
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -t vi-copy    C-WheelUpPane   halfpage-up
bind -t vi-copy    C-WheelDownPane halfpage-down
bind -t emacs-copy C-WheelUpPane   halfpage-up
bind -t emacs-copy C-WheelDownPane halfpage-down

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"


####################################
# Copy from Tmux to Clipboard
####################################

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

#####################################
